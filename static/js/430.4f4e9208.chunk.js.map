{"version":3,"file":"static/js/430.4f4e9208.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Users/Users.module.css?b9d0","webpack://my-app/./src/components/Users/PaginationC.module.css?b4b4","components/Users/PaginationC.tsx","components/Users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/userReducer/user-selectors.ts","components/Users/ContainerUsers.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"photoUser\":\"Users_photoUser__SuB-h\",\"currentPage\":\"Users_currentPage__vX7-L\"};","// extracted by mini-css-extract-plugin\nexport default {\"currentPage\":\"PaginationC_currentPage__7gnZW\",\"otherPage\":\"PaginationC_otherPage__RpUxO\"};","import React, {useState} from 'react';\nimport style from './PaginationC.module.css'\n\ntype paginationPropsType = {\n    totalItemsCount: number,\n    pageSize: number,\n    currentItem: number,\n    portionSize?: number,\n    onChangeCurrentItem: (page: number) => void\n}\n\nexport const PaginationC: React.FC<paginationPropsType> = ({\n                                                               totalItemsCount,\n                                                               pageSize,\n                                                               currentItem,\n                                                               onChangeCurrentItem,\n                                                               portionSize = 5\n                                                           }) => {\n\n    const [currentPortion, setCurrentPortion] = useState<number>(1)\n\n    const pageCount = Math.ceil(totalItemsCount / pageSize)\n    const pages = []\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i)\n    }\n\n    const totalPortionCount = Math.ceil(pageCount / portionSize)\n    const leftBorderPortion = (currentPortion - 1) * portionSize + 1\n    const rightBorderPortion = currentPortion * portionSize\n\n    const onClickChangePrevPortion = () => {\n        setCurrentPortion(prevState => prevState - 1)\n        onChangeCurrentItem(leftBorderPortion)\n    }\n    const onClickChangeNextPortion = () => {\n        setCurrentPortion(prevState => prevState + 1)\n        onChangeCurrentItem(rightBorderPortion)\n    }\n    return (\n        <div>\n            {currentPortion > 1 &&\n                <button onClick={onClickChangePrevPortion}>prev</button>}\n            {pages\n                .filter(page => leftBorderPortion <= page && rightBorderPortion >= page)\n                .map(page => (<span className={(page === currentItem) ? style.currentPage : style.otherPage}\n                                    onClick={() => onChangeCurrentItem(page)}> {page} </span>))}\n            {}\n            {currentPortion < totalPortionCount &&\n                <button onClick={onClickChangeNextPortion}>next</button>}\n        </div>\n    );\n};\n\n","import React from \"react\";\nimport {CircularProgress, Pagination} from \"@mui/material\";\nimport style from \"./Users.module.css\";\nimport userPhoto from \"../../assets/pngwing1.png\";\nimport {userType} from \"../../redux/userReducer/user-reducer\";\nimport {NavLink} from \"react-router-dom\";\nimport {PaginationC} from \"./PaginationC\";\n\n\nexport type UsersPropsType = {\n    totalUsers: number\n    currentPage: number\n    onChangeCurrentPage: (value: number) => void\n    usersData: userType[]\n    pageSize: number\n    isLoading: boolean\n    toggleIsFollowing: (id: number, isFetching: boolean) => void\n    followIsProgress: Array<number>\n    followUnfollowThunk: (action: \"post\" | \"delete\", userID: number) => void\n}\n\nconst Users: React.FC<UsersPropsType> = (props) => {\n    const pagesCount = Math.ceil(props.totalUsers / props.pageSize)\n    const pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n    const onChangeHandler = (page: number) =>\n        props.onChangeCurrentPage(page)\n    const followUnfollowHandler = (followed: boolean, id: number) => {\n        followed ? props.followUnfollowThunk(\"delete\", id)\n            : props.followUnfollowThunk(\"post\", id)\n    }\n    return <div>\n        {props.isLoading ? <CircularProgress size={50}/>\n            :\n            props.usersData.map(el => {\n                return <div key={el.id}>\n                    <NavLink to={`/profile/${el.id}`}>\n                        <img className={style.photoUser} src={el.photos.small ? el.photos.small : userPhoto}\n                             alt=\"userPhoto\"/>\n                    </NavLink>\n                    <h3>{el.name}</h3>\n                    <p>{el.status}</p>\n                    <div>\n                        <button disabled={props.followIsProgress.some(id => id === el.id)}\n                                onClick={() => followUnfollowHandler(el.followed, el.id)}>\n                            {el.followed ? `Unfollow` : `Follow`}\n                        </button>\n                    </div>\n\n                </div>\n            })\n        }\n        <PaginationC totalItemsCount={props.totalUsers} pageSize={props.pageSize} currentItem={props.currentPage} onChangeCurrentItem={onChangeHandler} portionSize={10}/>\n\n    </div>\n}\n\nexport default Users;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {AppStateType} from \"../redux-store\";\nimport {createSelector} from \"reselect\";\nimport {userType} from \"./user-reducer\";\n\n const getUsersSelector = (state: AppStateType): userType[] => {\n    return state.userPage.users\n}\n// add reselect for learn, use fake filter\nexport const getUsers = createSelector(getUsersSelector,(users: userType[]) => {\n    return users.filter(() => true)\n})\nexport const getTotalUsers = (state: AppStateType) => {\n    return state.userPage.totalUsersCount\n\n}\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.userPage.currentPage\n\n}\nexport const getPageSize = (state: AppStateType) => {\n    return state.userPage.pageSize\n\n}\nexport const getIsLoading = (state: AppStateType) => {\n    return state.userPage.isLoading\n\n}\nexport const getFollowIsProgress = (state: AppStateType) => {\n    return state.userPage.followIsProgress\n\n}\n\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Users from \"./Users\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {\n    followUnfollowThunk,\n    getUsersCurrentPage,\n    getUsersThunkCreator,\n    toggleIsFollowing,\n    userType\n} from \"../../redux/userReducer/user-reducer\";\nimport {\n    getCurrentPage,\n    getFollowIsProgress,\n    getIsLoading,\n    getPageSize,\n    getTotalUsers, getUsers,\n} from \"../../redux/userReducer/user-selectors\";\n\n\nclass UsersContainer extends React.Component<UsersContainerType> {\n\n    componentDidMount() {\n        this.props.getUsersThunkCreator(this.props.pageSize, this.props.currentPage)\n    }\n\n    render() {\n        const onChangeCurrentPage = (value: number) => {\n            this.props.getUsersCurrentPage(value, this.props.pageSize)\n\n        }\n        return <Users totalUsers={this.props.totalUsers}\n                      currentPage={this.props.currentPage}\n                      onChangeCurrentPage={onChangeCurrentPage}\n                      usersData={this.props.usersData}\n                      pageSize={this.props.pageSize}\n                      isLoading={this.props.isLoading}\n                      toggleIsFollowing={this.props.toggleIsFollowing}\n                      followIsProgress={this.props.followIsProgress}\n                      followUnfollowThunk={this.props.followUnfollowThunk}\n\n        />\n    }\n}\n\n\ntype mapStateToPropsType = {\n    usersData: Array<userType>\n    totalUsers: number\n    currentPage: number\n    pageSize: number\n    isLoading: boolean\n    followIsProgress: Array<number>\n\n}\ntype mapDispatchToPropsType = {\n    toggleIsFollowing: (id: number, isFetching: boolean) => void\n    getUsersThunkCreator: (pageSize: number, currentPage: number) => void\n    getUsersCurrentPage: (valuePage: number, currentPage: number) => void\n    followUnfollowThunk: (action: \"post\" | \"delete\", userID: number) => void\n\n}\nexport type UsersContainerType = mapStateToPropsType & mapDispatchToPropsType\n\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        usersData: getUsers(state),\n        totalUsers: getTotalUsers(state),\n        currentPage: getCurrentPage(state),\n        pageSize: getPageSize(state),\n        isLoading: getIsLoading(state),\n        followIsProgress: getFollowIsProgress(state)\n    }\n}\n\n\nexport default connect(mapStateToProps, {\n    getUsersCurrentPage,\n    getUsersThunkCreator,\n    toggleIsFollowing,\n    followUnfollowThunk\n})(UsersContainer);"],"names":["PaginationC","totalItemsCount","pageSize","currentItem","onChangeCurrentItem","portionSize","useState","currentPortion","setCurrentPortion","pageCount","Math","ceil","pages","i","push","totalPortionCount","leftBorderPortion","rightBorderPortion","onClick","prevState","filter","page","map","className","style","props","pagesCount","totalUsers","isLoading","CircularProgress","size","usersData","el","to","id","src","photos","small","userPhoto","alt","name","status","disabled","followIsProgress","some","followed","followUnfollowThunk","currentPage","onChangeCurrentPage","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getUsers","state","userPage","users","getTotalUsers","totalUsersCount","getCurrentPage","getPageSize","getIsLoading","getFollowIsProgress","UsersContainer","this","getUsersThunkCreator","getUsersCurrentPage","toggleIsFollowing","React","connect"],"sourceRoot":""}